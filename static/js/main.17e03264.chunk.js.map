{"version":3,"sources":["BeachesCard.js","Filter.js","Beaches.js","LandingPage.js","Maps.js","App.js","serviceWorker.js","index.js"],"names":["BeachesCard","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","beachProps","selectedBeach","keys","react_default","a","createElement","className","src","image","name","county","activities","map","activity","prop","onClick","closeBeach","Component","Filter","onChange","filterByCounty","placeholder","value","beachCounties","beachCounty","Beaches","beachVisibility","e","target","innerText","state","beaches","find","beach","toUpperCase","setState","beachCard","filteredBeaches","filter","push","allBeaches","_this2","fetch","then","response","json","data","catch","error","console","log","_this3","width","height","src_Filter","src_BeachesCard","LandingPage","hide","event","renderBeaches","landingPage","Maps","class","App","renderMain","section","classList","defineProperty","exitLandingPage","src_LandingPage","key","src_Beaches","src_Maps","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17e03264.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass BeachesCard extends Component {\n  constructor(props) {\n    super()\n  }\n\n  render() {\n    const beachProps = this.props.selectedBeach ? Object.keys(this.props.selectedBeach) : []\n    if (!this.props.selectedBeach) {\n      return ( <div className='none'></div> );\n    } else {\n    return (\n      <div className='popup'>\n        <img className='popup-img' src={this.props.selectedBeach.image}/>\n        <h1 className='popup-name' >{this.props.selectedBeach.name}</h1>\n        <p className='popup-county'>{this.props.selectedBeach.county}</p>\n        <ul className='popup-activ'>Activities:\n           {\n            this.props.selectedBeach.activities.map((activity) => {\n              return <li>{activity}</li>\n            })\n           }\n         </ul>\n         <ul className='popup-amen'>Amenities:\n           {\n            beachProps.map((prop) => {\n               if (this.props.selectedBeach[prop] === true) {\n                 return <li>{prop}</li>\n               }\n            })\n           }\n        </ul>\n        <button className='pop-btn' onClick={this.props.closeBeach}>X</button>\n      </div>\n    )\n    }\n  }\n  \n    \n\n}\n\n\nexport default BeachesCard;\n","import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass Filter extends Component {\n  constructor(){\n    super();\n  }\n\n  render(){\n    return(\n      <div className='filter-dropdown'>\n        <select onChange={this.props.filterByCounty}\n                className='filter'\n                placeholder='Filter by County'>\n        <option className='filter-names' value='all-counties'>All Counties</option>\n        {\n          this.props.beachCounties.map((beachCounty) => {\n            return <option className='filter-names' value={beachCounty.name}>{beachCounty.name}</option>\n          })\n        }\n        </select>\n      </div>\n\n    )\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport BeachesCard from './BeachesCard.js';\nimport Filter from './Filter.js';\nimport './App.css';\n\n\nclass Beaches extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allBeaches: [],\n      beaches: [],\n      beachCounties: [],\n      beachCard: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/beaches')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          beaches: data.beaches,\n          allBeaches: data.beaches\n        })\n      })\n      .catch(error => console.log('first fetch', error))\n\n\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/beachCounties')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          beachCounties: data.beachCounties,\n        })\n      })\n      .catch(error => console.log('second fetch', error))\n  }\n\n  beachVisibility = (e) => {\n    let name = e.target.innerText;\n    let selectedBeach = this.state.beaches.find((beach) => {\n      return beach.name.toUpperCase() === name;\n    })\n    this.setState({\n      beachCard: selectedBeach\n    })\n  }\n\n  closeBeach = () => {\n    this.setState({\n      beachCard: ''\n    })\n  }\n\n  filterByCounty = (e) => {\n    let filteredBeaches = [];\n\n    this.state.beaches.filter((beach) => {\n      if (e.target.value === beach.county) {\n        filteredBeaches.push(beach)\n        this.setState({\n          beaches: filteredBeaches\n        })\n      } else if (e.target.value === 'all-counties') {\n        this.setState({\n          beaches: this.state.allBeaches\n        })  \n      }\n    })\n  }\n    \n  render () {\n    return (\n      <div className='beaches-page'>\n        <header className='header'>\n        <h1 className='header-title'>Beachy Keen</h1>\n        </header>\n        <h2 className='header-subhead'>Explore Southern California's Impeccable Coastline</h2>\n        <section className='beach-image'>\n          <div className=\"bottom-image border\">\n\n            <img src='https://imagesvc.timeincapp.com/v3/mm/image?url=https%3A%2F%2Fimg1.coastalliving.timeinc.net%2Fsites%2Fdefault%2Ffiles%2Fstyles%2F4_3_horizontal_inbody_900x506%2Fpublic%2Fimage%2F2016%2F08%2Fmain%2Fpfeiffer-beach-california-607948645.jpg%3Fitok%3DwSIExkKn&w=1600&q=70' width=\"500\" height=\"400\" />\n          </div>\n          <p className=\"scroll-down\">Scroll Down</p>\n          <p className='arrow'>&#x25BC;</p>\n        </section>\n        <section className='filter-section'>\n          <h1 className='filter-headline'>Filter Your Search</h1>\n          <Filter filterByCounty={this.filterByCounty}\n                  beachCounties={this.state.beachCounties}/>\n        </section>\n        <div className='beach-body'>\n        {\n          this.state.beaches.map((beach) => {\n            return (\n                <div onClick={this.beachVisibility}\n                     className='beach-card'>\n                     <h1 className='beach-name'>{beach.name}</h1> \n                     <h2 className='beach-county'>{beach.county}</h2>\n                     <img className='beach-pics' src={beach.image}/>\n                </div>\n            )\n          })\n        }\n        </div>\n        <BeachesCard selectedBeach={this.state.beachCard} closeBeach={this.closeBeach} /> \n      </div>\n    )\n  }\n}\n\n\nexport default Beaches;\n\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass LandingPage extends Component {\n  constructor() {\n    super()\n    this.state = {\n      landingPage: true\n    }\n  }\n  \n  hide = (event) => {\n    this.props.renderBeaches(event)\n    this.setState({\n      landingPage: false\n    })\n  }\n\n  render() {\n    if (this.state.landingPage) {\n      return (\n        <div className='landing-page'>\n          <div className='landing-details-section'>\n            <h1 className='landing-headline'>BEACHY KEEN</h1>\n            <p className='landing-subhead'>SOUTHERN CALIFORNIA BEACHES</p>\n            <button className='landing-button' \n              onClick={this.hide}>Find Your Happy Place</button>\n          </div>\n          <div className='sun'></div>\n        </div>\n      )\n    } else {\n      return (\n        <div className='none'></div>\n      )\n    }\n  } \n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Maps extends Component {\n  constructor() {\n    super();\n  }\n\n    render () {\n    return (\n      <div className='maps-page'>\n        <header className=\"header\">\n          <h1 className='header-title'>Beachy Keen</h1>\n        </header>\n        <section className='maps-subhead'>\n          <i class=\"fas fa-map-marker-alt\"></i>\n          <h1 className='maps-details'>Find a Beach</h1>\n        </section>\n        <div className='maps-body'>\n            <section>\n              <h1 className='title'>San Luis Obispo County</h1>\n              <div className='map map-slo-image'></div>\n            </section>\n            <section>\n              <h1 className='title'>Santa Barbara County</h1>\n              <div className='map map-santabarbara-image'></div>\n            </section>\n            <section>\n              <h1 className='title'>Los Angelos County</h1>\n              <div className='map map-la-image'></div>\n            </section>\n            <section>\n              <h1 className='title'>Orange County</h1>\n              <div className='map map-orange-image'></div>\n            </section> \n            <section>\n              <h1 className='title'>San Diego County</h1>\n              <div className='map map-sd-image'></div>\n            </section>\n            <section> \n              <h1 className='title'>Ventura County</h1>\n              <div className='map map-ventura-image'></div>\n            </section>                        \n          </div>\n        </div>\n    )\n  }\n}\n\n\n\n\n\nexport default Maps;","import React, { Component } from 'react';\nimport Beaches from './Beaches.js'\nimport LandingPage from './LandingPage.js';\nimport Maps from './Maps.js';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      landingPage: true,\n      Beaches: false,\n      Maps: false,\n    };\n    this.keys = Object.keys(this.state);  \n  }\n\n  renderMain = (event) => {\n    const section = event.target.classList[0];\n    this.setState({\n      Beaches: false,\n      Maps: false,\n      [section]: true\n    });\n  }\n\n  exitLandingPage = () => {\n    this.setState({\n      Beaches: true,\n      landingPage: false\n    })\n  }\n\n  render() {\n    if (this.state.landingPage) {\n      return ( \n        <LandingPage renderBeaches={this.exitLandingPage} />\n      )\n    }\n    return (\n      <div className=\"App\">\n        <nav className=\"main-nav\">\n          <div className=\"nav-buttons\">\n            <button className='Beaches nav-button' \n              onClick={this.renderMain}>BEACHES</button>\n            <button className='Maps nav-button' \n              onClick={this.renderMain}>MAPS</button>\n          </div>\n        </nav>\n        {\n          this.keys.map( key => {\n            if (this.state[key]) {\n              switch (key) {\n              case 'Beaches':\n                return <Beaches key={key} />;\n              case 'Maps':\n                return <Maps key={key} />;\n              }\n            }\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}